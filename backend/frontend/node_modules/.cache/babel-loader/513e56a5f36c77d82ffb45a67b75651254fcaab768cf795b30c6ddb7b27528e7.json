{"ast":null,"code":"var _jsxFileName = \"D:\\\\user-auth-app\\\\backend\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { handleError, handleSuccess } from '../utlis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // ======================= STATE =======================\n  const [loginInfo, setLoginInfo] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n\n  // ======================= HANDLE INPUT CHANGE =======================\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginInfo(prev => ({\n      ...prev,\n      [name]: value\n    })); // update state dynamically\n  };\n\n  // ======================= HANDLE LOGIN =======================\n  const handleLogin = async e => {\n    e.preventDefault(); // prevent default page refresh\n\n    const {\n      email,\n      password\n    } = loginInfo;\n\n    // 1. Validate required fields\n    if (!email || !password) {\n      return handleError('Email and password are required');\n    }\n    try {\n      // 2. API request to backend\n      const url = 'http://localhost:5000/auth/login';\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginInfo)\n      });\n\n      // 3. Parse JSON response\n      const result = await response.json();\n      console.log('Login Response:', result);\n      const {\n        success,\n        msg,\n        jwtToken,\n        name\n      } = result;\n\n      // 4. If login success\n      if (success) {\n        // ✅ show success toast in green\n        handleSuccess(msg || 'Login successful!');\n\n        // ✅ Save token + username to localStorage\n        if (jwtToken) localStorage.setItem('token', jwtToken);\n        if (name) localStorage.setItem('loggedInuser', name);\n\n        // ✅ Redirect to home page after short delay (for toast to display)\n        setTimeout(() => {\n          navigate('/home');\n        }, 1200);\n      } else {\n        // 5. If login fails\n        handleError(message || 'Login failed');\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      handleError(err.message || 'Something went wrong. Please try again.');\n    }\n  };\n\n  // ======================= JSX =======================\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your email...\",\n          value: loginInfo.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter your Password...\",\n          value: loginInfo.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Don\\u2019t have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"KSbbZBaS/U35wUfggkqfPuiiPWs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ToastContainer","handleError","handleSuccess","jsxDEV","_jsxDEV","Login","_s","loginInfo","setLoginInfo","email","password","navigate","handleChange","e","name","value","target","prev","handleLogin","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","success","msg","jwtToken","localStorage","setItem","setTimeout","message","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","type","placeholder","to","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","_c","$RefreshReg$"],"sources":["D:/user-auth-app/backend/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { handleError, handleSuccess } from '../utlis';\r\n\r\nconst Login = () => {\r\n  // ======================= STATE =======================\r\n  const [loginInfo, setLoginInfo] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // ======================= HANDLE INPUT CHANGE =======================\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target; \r\n    setLoginInfo((prev) => ({ ...prev, [name]: value })); // update state dynamically\r\n  };\r\n\r\n  // ======================= HANDLE LOGIN =======================\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault(); // prevent default page refresh\r\n\r\n    const { email, password } = loginInfo;\r\n\r\n    // 1. Validate required fields\r\n    if (!email || !password) {\r\n      return handleError('Email and password are required');\r\n    }\r\n\r\n    try {\r\n      // 2. API request to backend\r\n      const url = 'http://localhost:5000/auth/login';\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(loginInfo),\r\n      });\r\n\r\n      // 3. Parse JSON response\r\n      const result = await response.json();\r\n      console.log('Login Response:', result);\r\n\r\n      const { success, msg, jwtToken, name } = result;\r\n\r\n      // 4. If login success\r\n      if (success) {\r\n        // ✅ show success toast in green\r\n        handleSuccess(msg || 'Login successful!');\r\n\r\n        // ✅ Save token + username to localStorage\r\n        if (jwtToken) localStorage.setItem('token', jwtToken);\r\n        if (name) localStorage.setItem('loggedInuser', name);\r\n\r\n        // ✅ Redirect to home page after short delay (for toast to display)\r\n        setTimeout(() => {\r\n          navigate('/home');\r\n        }, 1200);\r\n\r\n      } else {\r\n        // 5. If login fails\r\n        handleError(message || 'Login failed');\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      handleError(err.message || 'Something went wrong. Please try again.');\r\n    }\r\n  };\r\n\r\n  // ======================= JSX =======================\r\n  return (\r\n    <div className='Container'>\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label htmlFor='email'>Email</label>\r\n          <input\r\n            onChange={handleChange}\r\n            type='email'\r\n            name='email'\r\n            placeholder='Enter your email...'\r\n            value={loginInfo.email}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            onChange={handleChange}\r\n            type='password'\r\n            name='password'\r\n            placeholder='Enter your Password...'\r\n            value={loginInfo.password}\r\n          />\r\n        </div>\r\n        <button type='submit'>Login</button>\r\n        <span>\r\n          Don’t have an account? <Link to='/signup'>Signup</Link>\r\n        </span>\r\n      </form>\r\n\r\n      {/* ✅ ToastContainer with green success */}\r\n      <ToastContainer\r\n        position='top-right'\r\n        autoClose={1500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}